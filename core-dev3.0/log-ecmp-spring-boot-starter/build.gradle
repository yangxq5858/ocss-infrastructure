apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

dependencies {
    //Auto Configure
    compile('org.springframework.boot:spring-boot-autoconfigure')
    //JPA
    compile('org.springframework.boot:spring-boot-starter-logging')

    compile 'org.fluentd:fluent-logger:0.3.3'
    //logback
    compile(
//            "ch.qos.logback:logback-classic:1.2.3",
            "com.sndyuk:logback-more-appenders:1.4.3"
    )

    compile("com.ecmp:ecmp-util:$util_version")

    // 测试
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
    manifest {
        attributes("Manifest-Version": "1.0")
        attributes("Created-By": "Gradle")
        attributes("Implementation-Title": "ECMP-$project.name")
        attributes("Implementation-Version": "$project.version")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
    //这里一定得要。在多模块下，不然编译失败，因为不会把信赖模块给打包。
    enabled = true
}

/////////////////////////////////////上传Maven仓库////////////////////////////////////////
//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

//如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }
    return 'Success'
}

// gradle upload
